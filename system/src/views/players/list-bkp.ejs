<%- contentFor('body') %>
<div>
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Players
        </h1>
        <ol class="breadcrumb">
            <li><a href="/#/home"><i class="fa fa-home"></i> Home</a></li>
            <li class="active"><i class="fa fa-users"></i> Players</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="alert"
            :class="{'alert-danger': pagePlayers.lists.players.error, 'alert-success': !pagePlayers.lists.players.error}"
            v-if="pagePlayers.lists.players.messages.length" v-html="pagePlayers.lists.players.messages.join('<br>')">
        </div>

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Lista de Players</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body"
                v-if="pagePlayers.lists.players.loading || (pagePlayers.lists.players.started && !pagePlayers.lists.players.loading && !pagePlayers.lists.players.data.length)">
                <div class="alert alert-info" v-if="pagePlayers.lists.players.loading">Carregando...</div>
                <div class="alert alert-warning"
                    v-if="pagePlayers.lists.players.started && !pagePlayers.lists.players.loading && !pagePlayers.lists.players.data.length">
                    Nenhum player
                    cadastrado</div>
            </div>
            <div class="box-body table-responsive no-padding"
                v-if="pagePlayers.lists.players.started && !pagePlayers.lists.players.loading && pagePlayers.lists.players.data.length">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th class="text-right">ID</th>
                            <th class="text-center">Avatar</th>
                            <th>Username</th>
                            <th>Nickname</th>
                            <th class="text-center">WL</th>
                            <th class="text-center">BAN</th>
                            <th class="text-right">Dinheiro</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="player in pagePlayers.lists.players.data" :class="{
                            'bg-danger': player.whitelisted == 0 && player.banned == 1,
                            'bg-warning': player.whitelisted == 0 && player.banned == 0
                        }">
                            <td class="text-right">
                                {{ player.player_id }}
                            </td>
                            <td class="text-center">
                                <img :src="player.avatar" alt="" class="img-responsive img-circle img-thumbnail"
                                    style="width: 32px; padding: 1px;" v-if="player.hasAvatar == 1">
                            </td>
                            <td>
                                {{ player.username }}
                            </td>
                            <td>
                                {{ player.nickname }}
                            </td>
                            <td class="text-center">
                                {{ player.whitelisted }}
                            </td>
                            <td class="text-center">
                                {{ player.banned }}
                            </td>
                            <td class="text-right">
                                {{ player.money_formatted }}
                            </td>
                            <td class="text-center">
                                <a :href="'/players/' + player.player_id">
                                    <span class="fa fa-eye"></span>
                                </a>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>


    </section>
</div>

<%- contentFor('scripts') %>
<script>
    mixins.push({
        data: {

            pagePlayers: {
                lists: {
                    players: {
                        started: false,
                        loading: false,
                        error: false,
                        messages: [],
                        data: [],
                    },
                },
            },

        },
        methods: {

            getPlayers: function () {
                console.log('getPlayers()');
                var ajaxCb = async (response) => {
                    App.pagePlayers.lists.players.error = response.error;
                    App.pagePlayers.lists.players.messages = response.messages;

                    if (!response.error) {
                        App.pagePlayers.lists.players.data = [];
                        for (var i in response.content.players) {
                            App.pagePlayers.lists.players.data[i] = response.content.players[i];
                            App.pagePlayers.lists.players.data[i].hasAvatar = 0;
                        }

                        const list = await App.checkImages();
                        for (let i in list.then) {
                            const index = parseInt(list.then[i]);
                            App.pagePlayers.lists.players.data[index].hasAvatar = 1;
                        }
                    }

                    App.pagePlayers.lists.players.loading = false;
                };

                App.clearPageList('pagePlayers', 'players');
                App.pagePlayers.lists.players.started = true;
                App.pagePlayers.lists.players.loading = true;

                axios.get(`${apiHost}/players`, {
                    headers: {
                        'x-access-token': token,
                    },
                })
                    .then(function (response) {
                        ajaxCb(response.data);
                    })
                    .catch(function (error) {
                        ajaxCb(error.response.data);
                    });

            },

            checkImages: function (i) {

                const list = {
                    then: [],
                    catch: [],
                };
                const length = App.pagePlayers.lists.players.data.length;
                let count = 0;

                return new Promise((resolve, reject) => {

                    for (let i in App.pagePlayers.lists.players.data) {
                        const avatar = App.pagePlayers.lists.players.data[i].avatar;
                        if (avatar) {
                            const img = new Image();
                            img.src = App.pagePlayers.lists.players.data[i].avatar;
                            img.setAttribute('data-i', i);

                            img.onload = function () {
                                const index = this.getAttribute('data-i');
                                list.then.push(index);
                                count++;
                                if (count == length) resolve(list);
                            };
                            img.onerror = function () {
                                const index = this.getAttribute('data-i');
                                list.catch.push(index);
                                count++;
                                if (count == length) resolve(list);
                            };
                        } else {
                            count++;
                            if (count == length) resolve(list);
                        }
                    }

                });

                // return new Promise((resolve, reject) => {
                //     const avatar = App.pagePlayers.lists.players.data[i].avatar;
                //     if (avatar) {
                //         const img = new Image();
                //         img.src = App.pagePlayers.lists.players.data[i].avatar;
                //         img.onload = () => resolve(i);
                //         img.onerror = () => reject(i);
                //         // console.log(i, 'img.src', img.src);
                //         // img.onload = function () {
                //         //     setTimeout(function () {
                //         //         App.pagePlayers.lists.players.data[i].hasAvatar = 1;
                //         //         console.log(i, App.pagePlayers.lists.players.data[i].hasAvatar);
                //         //     }, 500);
                //         // };
                //         // img.onerror = function () {
                //         //     setTimeout(function () {
                //         //         App.pagePlayers.lists.players.data[i].hasAvatar = 2;
                //         //         console.log(i, App.pagePlayers.lists.players.data[i].hasAvatar);
                //         //     }, 500);
                //         // };
                //     }
                // });
            },

            init: function () {
                App.getPlayers();
            },

        },
    });
</script>