<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Discord RP</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->
    <link rel="stylesheet" href="/assets/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/assets/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="/assets/bower_components/Ionicons/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="/assets/bower_components/admin-lte/dist/css/AdminLTE.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="/assets/bower_components/admin-lte/plugins/iCheck/square/blue.css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->

    <!-- Google Font -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>

<body class="hold-transition login-page">
    <div class="login-box" id="AppVue">
        <div class="login-logo">
            <a href="/"><b>Discord RP</b></a>
        </div>
        <!-- /.login-logo -->

        <div class="login-box-body">
            <form action="../../index2.html" method="post">

                <div class="alert" :class="{'alert-danger': formLogin.error, 'alert-success': !formLogin.error}"
                    v-if="formLogin.messages.length" v-html="formLogin.messages.join('<br>')"></div>

                <div class="form-group has-feedback" :class="{'has-error': formLogin.fields.email.error}">
                    <input type="email" class="form-control" placeholder="E-mail" v-model="formLogin.fields.email.value"
                        :disabled="formLogin.loading">
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    <small class="help-block" v-if="formLogin.fields.email.messages.length"
                        v-html="formLogin.fields.email.messages.join('<br>')"></small>
                </div>

                <div class="form-group has-feedback" :class="{'has-error': formLogin.fields.password.error}">
                    <input type="password" class="form-control" placeholder="Password"
                        v-model="formLogin.fields.password.value" :disabled="formLogin.loading">
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    <small class="help-block" v-if="formLogin.fields.password.messages.length"
                        v-html="formLogin.fields.password.messages.join('<br>')"></small>
                </div>

                <div class="row">
                    <div class="col-xs-6">
                        <button type="submit" class="btn btn-primary btn-block btn-flat" @click.prevent="doLogin()"
                            :disabled="formLogin.loading">Entrar</button>
                    </div>
                    <!-- /.col -->
                </div>

            </form>


        </div>
        <!-- /.login-box-body -->
    </div>
    <!-- /.login-box -->

    <!-- jQuery 3 -->
    <script src="/assets/bower_components/jquery/dist/jquery.min.js"></script>
    <!-- Bootstrap 3.3.7 -->
    <script src="/assets/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- iCheck -->
    <script src="/assets/bower_components/admin-lte/plugins/iCheck/icheck.min.js"></script>

    <script src="/assets/bower_components/vue/dist/vue.min.js"></script>
    <script src="/assets/bower_components/axios/dist/axios.min.js"></script>

    <script>

        var apiPath = '<%- apiPath %>';

        var App = new Vue({
            el: '#AppVue',
            data: {
                formLogin: {
                    loading: false,
                    error: false,
                    messages: [],
                    fields: {
                        email: {
                            value: '',
                            error: false,
                            messages: [],
                        },
                        password: {
                            value: '',
                            error: false,
                            messages: [],
                        },
                    }
                },
            },
            methods: {
                clearForm: function (formName) {
                    App[formName].loading = false;
                    App[formName].error = false;
                    App[formName].messages = [];

                    for (let field in App[formName].fields) {
                        App[formName].fields[field].value = App[formName].fields[field].value.trim();
                        App[formName].fields[field].error = false;
                        App[formName].fields[field].messages = [];
                    }
                },
                doLogin: function () {
                    var submitCb = (response) => {
                        App.formLogin.error = response.error;
                        App.formLogin.messages = response.messages;

                        for (let field in response.form) {
                            App.formLogin.fields[field].error = response.form[field].error;
                            App.formLogin.fields[field].messages = response.form[field].messages;
                        }

                        if (response.error) {
                            App.formLogin.loading = false;
                            return;
                        }

                        var token = response.content.token;

                        axios.post(`/login`, {
                            token: response.content.token,
                        })
                            .then(function (response) {
                                window.location.replace('/');
                            })
                            .catch(function (error) {
                                App.formLogin.error = true;
                                App.formLogin.messages = ['Um erro interno aconteceu!'];
                                App.formLogin.loading = false;
                            });

                    };

                    App.clearForm('formLogin');

                    var error = false;

                    if (!App.formLogin.fields.email.value) {
                        App.formLogin.fields.email.error = true;
                        App.formLogin.fields.email.messages.push('Campo obrigatório.');
                        error = true;
                    }

                    if (!App.formLogin.fields.password.value) {
                        App.formLogin.fields.password.error = true;
                        App.formLogin.fields.password.messages.push('Campo obrigatório.');
                        error = true;
                    }

                    if (error) {
                        App.formLogin.error = true;
                        App.formLogin.messages.push('Verifique todos os campos.');
                        return;
                    }

                    App.formLogin.loading = true;

                    axios.post(`${apiPath}/auth`, {
                        email: App.formLogin.fields.email.value,
                        password: App.formLogin.fields.password.value,
                    })
                        .then(function (response) {
                            submitCb(response.data);
                        })
                        .catch(function (error) {
                            submitCb(error.response.data);
                        });
                },
            },
        });

    </script>
</body>

</html>