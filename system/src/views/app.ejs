<%- contentFor('body') %>

<div v-if="currentPage === '/dashboard'">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Dashboard
        </h1>
        <ol class="breadcrumb">
            <li class="active"><i class="fa fa-dashboard"></i> Dashboard</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">

    </section>
</div>

<div v-if="currentPage === '/users'">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Usuários
        </h1>
        <ol class="breadcrumb">
            <li><a href="/#/dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li class="active"><i class="fa fa-users"></i> Usuários</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="alert"
            :class="{'alert-danger': pageUsers.lists.users.error, 'alert-success': !pageUsers.lists.users.error}"
            v-if="pageUsers.lists.users.messages.length" v-html="pageUsers.lists.users.messages.join('<br>')"></div>

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Lista de Usuários</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body"
                v-if="pageUsers.lists.users.loading || (pageUsers.lists.users.started && !pageUsers.lists.users.loading && !pageUsers.lists.users.data.length)">
                <div class="alert alert-info" v-if="pageUsers.lists.users.loading">Carregando...</div>
                <div class="alert alert-warning"
                    v-if="pageUsers.lists.users.started && !pageUsers.lists.users.loading && !pageUsers.lists.users.data.length">
                    Nenhum usuário
                    cadastrado</div>
            </div>
            <div class="box-body table-responsive no-padding"
                v-if="pageUsers.lists.users.started && !pageUsers.lists.users.loading && pageUsers.lists.users.data.length">
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <th>Nome</th>
                            <th>Email</th>
                        </tr>
                        <tr v-for="user in pageUsers.lists.users.data">
                            <td>
                                {{ user.user_id }}
                            </td>
                            <td>
                                {{ user.name }}
                            </td>
                            <td>
                                {{ user.email }}
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>


    </section>
</div>

<div v-if="currentPage === '/whitelist/questions'">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Perguntas
        </h1>
        <ol class="breadcrumb">
            <li><a href="/#/dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li><i class="fa fa-list-ol"></i> Whitelist</li>
            <li class="active">Perguntas</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="alert"
            :class="{'alert-danger': pageWhitelistQuestions.lists.questions.error, 'alert-success': !pageWhitelistQuestions.lists.questions.error}"
            v-if="pageWhitelistQuestions.lists.questions.messages.length"
            v-html="pageWhitelistQuestions.lists.questions.messages.join('<br>')"></div>

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Lista de Perguntas</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body"
                v-if="pageWhitelistQuestions.lists.questions.loading || (pageWhitelistQuestions.lists.questions.started && !pageWhitelistQuestions.lists.questions.loading && !pageWhitelistQuestions.lists.questions.data.length)">
                <div class="alert alert-info" v-if="pageWhitelistQuestions.lists.questions.loading">Carregando...</div>
                <div class="alert alert-warning"
                    v-if="pageWhitelistQuestions.lists.questions.started && !pageWhitelistQuestions.lists.questions.loading && !pageWhitelistQuestions.lists.questions.data.length">
                    Nenhuma
                    pergunta
                    cadastrada</div>
            </div>
            <div class="box-body table-responsive no-padding"
                v-if="pageWhitelistQuestions.lists.questions.started && !pageWhitelistQuestions.lists.questions.loading && pageWhitelistQuestions.lists.questions.data.length">
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <th>Pergunta</th>
                            <th>Tipo</th>
                            <th>Opções</th>
                        </tr>
                        <tr v-for="question in pageWhitelistQuestions.lists.questions.data">
                            <td>
                                {{ question.question_id }}
                            </td>
                            <td>
                                {{ question.description }}
                            </td>
                            <td>
                                <span v-if="question.type === 'text'">Texto</span>
                                <span v-if="question.type === 'options'">Opções</span>
                            </td>
                            <td>
                                <div v-if="question.type === 'text'">---</div>
                                <div v-if="question.type === 'options'">
                                    <table class="table table-bordered">
                                        <tbody>
                                            <tr v-for="answer in question.answers"
                                                :class="{'text-success': answer.is_correct, 'text-danger': !answer.is_correct}">
                                                <td width="30">
                                                    [{{ answer.option }}]
                                                </td>
                                                <td>
                                                    {{ answer.description }}
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>


    </section>
</div>

<div v-if="currentPage === '/whitelist/answers'">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Respostas dos Jogadores
        </h1>
        <ol class="breadcrumb">
            <li><a href="/#/dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li><i class="fa fa-list-ol"></i> Whitelist</li>
            <li class="active">Respostas dos Jogadores</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">

        <div class="alert"
            :class="{'alert-danger': pageWhitelistAnswers.lists.answers.error, 'alert-success': !pageWhitelistAnswers.lists.answers.error}"
            v-if="pageWhitelistAnswers.lists.answers.messages.length"
            v-html="pageWhitelistAnswers.lists.answers.messages.join('<br>')"></div>

        <div class="box">
            <div class="box-header">
                <h3 class="box-title">Lista de Perguntas</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body"
                v-if="pageWhitelistAnswers.lists.answers.loading || (pageWhitelistAnswers.lists.answers.started && !pageWhitelistAnswers.lists.answers.loading && !pageWhitelistAnswers.lists.answers.data.length)">
                <div class="alert alert-info" v-if="pageWhitelistAnswers.lists.answers.loading">Carregando...</div>
                <div class="alert alert-warning"
                    v-if="pageWhitelistAnswers.lists.answers.started && !pageWhitelistAnswers.lists.answers.loading && !pageWhitelistAnswers.lists.answers.data.length">
                    Nenhuma
                    pergunta
                    cadastrada</div>
            </div>
            <div class="box-body table-responsive no-padding"
                v-if="pageWhitelistAnswers.lists.answers.started && !pageWhitelistAnswers.lists.answers.loading && pageWhitelistAnswers.lists.answers.data.length">
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <th>Pergunta</th>
                            <th>Tipo</th>
                            <th>Opções</th>
                        </tr>
                        <tr v-for="answer in pageWhitelistAnswers.lists.answers.data">
                            <td>
                                {{ answer.question_id }}
                            </td>
                            <td>
                                {{ answer.description }}
                            </td>
                            <td>
                                <span v-if="answer.type === 'text'">Texto</span>
                                <span v-if="answer.type === 'options'">Opções</span>
                            </td>
                            <td>
                                <div v-if="answer.type === 'text'">---</div>
                                <div v-if="answer.type === 'options'">
                                    <table class="table table-bordered">
                                        <tbody>
                                            <tr v-for="a in answer.answers"
                                                :class="{'text-success': a.is_correct, 'text-danger': !a.is_correct}">
                                                <td width="30">
                                                    [{{ a.option }}]
                                                </td>
                                                <td>
                                                    {{ a.description }}
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <!-- /.box-body -->
        </div>


    </section>
</div>

<div v-if="currentPage === '/404'">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            404 - Página não encontrada
        </h1>
        <ol class="breadcrumb">
            <li><a href="/#/dashboard"><i class="fa fa-dashboard"></i> Dashboard</a></li>
            <li class="active">404 - Página não encontrada</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="error-page">
            <h2 class="headline text-yellow"> 404</h2>

            <div class="error-content">
                <h3><i class="fa fa-warning text-yellow"></i> Oops! Página não encontrada!</h3>
            </div>
            <!-- /.error-content -->
        </div>
        <!-- /.error-page -->
    </section>
</div>



<%- contentFor('scripts') %>

<script>

    var apiPath = '<%- apiPath %>';
    var token = '<%- token %>';

    var route = new FMRoute();

    route.get('/', function (vars, next) {
        route.go('/dashboard');
    });

    route.get('/dashboard', function (vars, next) {
        App.currentPage = '/dashboard';
        next();
    });

    route.get('/users', function (vars, next) {
        App.currentPage = '/users';

        App.getUsers();

        next();
    });

    route.get('/whitelist/questions', function (vars, next) {
        App.currentPage = '/whitelist/questions';

        App.getQuestions();

        next();
    });

    route.get('/whitelist/answers', function (vars, next) {
        App.currentPage = '/whitelist/answers';

        App.getAnswers();

        next();
    });

    route.error('404', function (vars, next) {
        App.currentPage = '/404';

        next();
    });

    mixins.push({
        data: {
            pageUsers: {
                lists: {
                    users: {
                        started: false,
                        loading: false,
                        error: false,
                        messages: [],
                        data: [],
                    },
                },
            },
            pageWhitelistQuestions: {
                lists: {
                    questions: {
                        started: false,
                        loading: false,
                        error: false,
                        messages: [],
                        data: [],
                    },
                },
            },
            pageWhitelistAnswers: {
                lists: {
                    answers: {
                        started: false,
                        loading: false,
                        error: false,
                        messages: [],
                        data: [],
                    },
                },
            },
        },
        methods: {

            init: function () {
                route.run();
            },

            clearPageList: function (pageName, listName) {
                App[pageName].lists[listName].started = false;
                App[pageName].lists[listName].loading = false;
                App[pageName].lists[listName].error = false;
                App[pageName].lists[listName].messages = [];
                App[pageName].lists[listName].data = [];
            },

            clearPageForm: function (pageName, formName) {
                App[pageName].forms[formName].error = false;
                App[pageName].forms[formName].loading = false;
                App[pageName].forms[formName].messages = [];

                for (let field in App[pageName].forms[formName].fields) {
                    App[pageName].forms[formName].fields[field].value = App[pageName].forms[formName].fields[field].value.trim();
                    App[pageName].forms[formName].fields[field].error = false;
                    App[pageName].forms[formName].fields[field].messages = [];
                }
            },

            getUsers: function () {
                var ajaxCb = (response) => {
                    App.pageUsers.lists.users.error = response.error;
                    App.pageUsers.lists.users.messages = response.messages;

                    if (!response.error) {
                        for (var i in response.content.users) {
                            App.pageUsers.lists.users.data.push(response.content.users[i]);
                        }
                    }

                    App.pageUsers.lists.users.loading = false;
                };

                App.clearPageList('users', 'users');
                App.pageUsers.lists.users.started = true;
                App.pageUsers.lists.users.loading = true;

                axios.get(`${apiPath}/users`, {
                    headers: {
                        'x-access-token': token,
                    },
                })
                    .then(function (response) {
                        ajaxCb(response.data);
                    })
                    .catch(function (error) {
                        ajaxCb(error.response.data);
                    });

            },

            getQuestions: function () {
                var ajaxCb = (response) => {
                    App.pageWhitelistQuestions.lists.questions.error = response.error;
                    App.pageWhitelistQuestions.lists.questions.messages = response.messages;

                    if (!response.error) {
                        for (var i in response.content.questions) {
                            App.pageWhitelistQuestions.lists.questions.data.push(response.content.questions[i]);
                        }
                    }

                    App.pageWhitelistQuestions.lists.questions.loading = false;
                };

                App.clearPageList('whitelistQuestions', 'questions');
                App.pageWhitelistQuestions.lists.questions.started = true;
                App.pageWhitelistQuestions.lists.questions.loading = true;

                axios.get(`${apiPath}/whitelist/questions`, {
                    headers: {
                        'x-access-token': token,
                    },
                })
                    .then(function (response) {
                        ajaxCb(response.data);
                    })
                    .catch(function (error) {
                        ajaxCb(error.response.data);
                    });
            },

            getAnswers: function () {
                var ajaxCb = (response) => {
                    console.log('response', response);
                    App.pageWhitelistAnswers.lists.answers.error = response.error;
                    App.pageWhitelistAnswers.lists.answers.messages = response.messages;

                    if (!response.error) {
                        for (var i in response.content.answers) {
                            App.pageWhitelistAnswers.lists.answers.data.push(response.content.answers[i]);
                        }
                    }

                    App.pageWhitelistAnswers.lists.answers.loading = false;
                };

                App.clearPageList('whitelistAnswers', 'answers');
                App.pageWhitelistAnswers.lists.answers.started = true;
                App.pageWhitelistAnswers.lists.answers.loading = true;

                axios.get(`${apiPath}/whitelist/answers`, {
                    headers: {
                        'x-access-token': token,
                    },
                })
                    .then(function (response) {
                        ajaxCb(response.data);
                    })
                    .catch(function (error) {
                        ajaxCb(error.response.data);
                    });
            },

        },
    });

</script>